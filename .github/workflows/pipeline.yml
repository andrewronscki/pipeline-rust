name: Audit

on: [pull_request]

jobs:
  audit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Install Clippy
        run: rustup component add clippy

      - name: Run Clippy - Verificando qualidade do código, práticas recomendadas, e possíveis bugs
        run: cargo clippy -- -D warnings

      - name: Install Rustfmt
        run: rustup component add rustfmt

      - name: Check Rustfmt - Verificando formatação do código
        run: cargo fmt -- --check

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run cargo-audit - Verificando se possui algum pacote com vulnerabilidade
        run: cargo audit

  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Install grcov
        run: sudo apt-get install grcov

      - name: Run Tests with Coverage
        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-Cinstrument-coverage"
          LLVM_PROFILE_FILE: "coverage-%p-%m.profraw"
        run: |
          cargo build
          cargo test
          grcov . --binary-path ./target/debug/ -s . -t cobertura --branch --ignore-not-existing -o cobertura.xml

      - name: Check Coverage
        run: |
          coverage=$(grep -Po 'line-rate="\K[0-9.]+' cobertura.xml)
          echo "Coverage is $coverage"
          coverage_percentage=$(echo "$coverage * 100" | bc)
          echo "Coverage percentage is $coverage_percentage"
          if (( $(echo "$coverage_percentage < 90" | bc -l) )); then
            echo "Coverage is below 90%"
            exit 1
          else
            echo "Coverage is above 90%"
          fi
